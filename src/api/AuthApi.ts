/* tslint:disable */
/* eslint-disable */
/**
 * Tech Web - OpenAPI 3.0
 * Prova
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from './models/runtime'
import type { AuthenticationDto, CustomerDto } from './models/index'
import {
  AuthenticationDtoFromJSON,
  AuthenticationDtoToJSON,
  CustomerDtoFromJSON,
  CustomerDtoToJSON
} from './models/index'

export interface LoginRequest {
  customerDto: CustomerDto
}

export interface RegisterRequest {
  customerDto: CustomerDto
}

/**
 *
 */
export class AuthApi extends runtime.BaseAPI {
  /**
   * Effettua l\'operazione di login
   */
  async loginRaw(
    requestParameters: LoginRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<AuthenticationDto>> {
    if (requestParameters['customerDto'] == null) {
      throw new runtime.RequiredError(
        'customerDto',
        'Required parameter "customerDto" was null or undefined when calling login().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/auth/login`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CustomerDtoToJSON(requestParameters['customerDto'])
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      AuthenticationDtoFromJSON(jsonValue)
    )
  }

  /**
   * Effettua l\'operazione di login
   */
  async login(
    requestParameters: LoginRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<AuthenticationDto> {
    const response = await this.loginRaw(requestParameters, initOverrides)
    return await response.value()
  }

  /**
   * Consente all\'utente di registarsi
   */
  async registerRaw(
    requestParameters: RegisterRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<AuthenticationDto>> {
    if (requestParameters['customerDto'] == null) {
      throw new runtime.RequiredError(
        'customerDto',
        'Required parameter "customerDto" was null or undefined when calling register().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/auth/register`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CustomerDtoToJSON(requestParameters['customerDto'])
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      AuthenticationDtoFromJSON(jsonValue)
    )
  }

  /**
   * Consente all\'utente di registarsi
   */
  async register(
    requestParameters: RegisterRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<AuthenticationDto> {
    const response = await this.registerRaw(requestParameters, initOverrides)
    return await response.value()
  }
}
