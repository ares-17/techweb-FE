/* tslint:disable */
/* eslint-disable */
/**
 * Tech Web - OpenAPI 3.0
 * Prova
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from './runtime'
import type { QuestionResponseDto } from './QuestionResponseDto'
import {
  QuestionResponseDtoFromJSON,
  QuestionResponseDtoFromJSONTyped,
  QuestionResponseDtoToJSON
} from './QuestionResponseDto'

/**
 *
 * @export
 * @interface QuizResponseDto
 */
export interface QuizResponseDto {
  /**
   *
   * @type {Array<QuestionResponseDto>}
   * @memberof QuizResponseDto
   */
  questions?: Array<QuestionResponseDto>
  /**
   *
   * @type {string}
   * @memberof QuizResponseDto
   */
  id?: string
  /**
   *
   * @type {boolean}
   * @memberof QuizResponseDto
   */
  isCustomerAnonymous?: boolean
  /**
   *
   * @type {string}
   * @memberof QuizResponseDto
   */
  idCustomer?: string
  /**
   *
   * @type {string}
   * @memberof QuizResponseDto
   */
  nonAuthenticableUsername?: string
}

/**
 * Check if a given object implements the QuizResponseDto interface.
 */
export function instanceOfQuizResponseDto(value: object): value is QuizResponseDto {
  return true
}

export function QuizResponseDtoFromJSON(json: any): QuizResponseDto {
  return QuizResponseDtoFromJSONTyped(json, false)
}

export function QuizResponseDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): QuizResponseDto {
  if (json == null) {
    return json
  }
  return {
    questions:
      json['questions'] == null
        ? undefined
        : (json['questions'] as Array<any>).map(QuestionResponseDtoFromJSON),
    id: json['id'] == null ? undefined : json['id'],
    isCustomerAnonymous:
      json['isCustomerAnonymous'] == null ? undefined : json['isCustomerAnonymous'],
    idCustomer: json['idCustomer'] == null ? undefined : json['idCustomer'],
    nonAuthenticableUsername:
      json['nonAuthenticableUsername'] == null ? undefined : json['nonAuthenticableUsername']
  }
}

export function QuizResponseDtoToJSON(value?: QuizResponseDto | null): any {
  if (value == null) {
    return value
  }
  return {
    questions:
      value['questions'] == null
        ? undefined
        : (value['questions'] as Array<any>).map(QuestionResponseDtoToJSON),
    id: value['id'],
    isCustomerAnonymous: value['isCustomerAnonymous'],
    idCustomer: value['idCustomer'],
    nonAuthenticableUsername: value['nonAuthenticableUsername']
  }
}
