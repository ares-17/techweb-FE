/* tslint:disable */
/* eslint-disable */
/**
 * Tech Web - OpenAPI 3.0
 * Prova
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from './runtime'
/**
 *
 * @export
 * @interface ScoreDto
 */
export interface ScoreDto {
  /**
   *
   * @type {string}
   * @memberof ScoreDto
   */
  customerId?: string
  /**
   *
   * @type {string}
   * @memberof ScoreDto
   */
  customerUsername?: string
  /**
   *
   * @type {boolean}
   * @memberof ScoreDto
   */
  customerIslogged?: boolean
  /**
   *
   * @type {boolean}
   * @memberof ScoreDto
   */
  customerIsanonymous?: boolean
  /**
   *
   * @type {string}
   * @memberof ScoreDto
   */
  quizId?: string
  /**
   *
   * @type {string}
   * @memberof ScoreDto
   */
  quizTitle?: string
  /**
   *
   * @type {string}
   * @memberof ScoreDto
   */
  quizDescription?: string
  /**
   *
   * @type {string}
   * @memberof ScoreDto
   */
  quizCreatedat?: string
  /**
   *
   * @type {number}
   * @memberof ScoreDto
   */
  quizMaxerrors?: number
  /**
   *
   * @type {boolean}
   * @memberof ScoreDto
   */
  quizIsopen?: boolean
  /**
   *
   * @type {Date}
   * @memberof ScoreDto
   */
  completedaAt?: Date
  /**
   *
   * @type {number}
   * @memberof ScoreDto
   */
  score: number
}

/**
 * Check if a given object implements the ScoreDto interface.
 */
export function instanceOfScoreDto(value: object): value is ScoreDto {
  if (!('score' in value) || value['score'] === undefined) return false
  return true
}

export function ScoreDtoFromJSON(json: any): ScoreDto {
  return ScoreDtoFromJSONTyped(json, false)
}

export function ScoreDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScoreDto {
  if (json == null) {
    return json
  }
  return {
    customerId: json['customerId'] == null ? undefined : json['customerId'],
    customerUsername: json['customerUsername'] == null ? undefined : json['customerUsername'],
    customerIslogged: json['customerIslogged'] == null ? undefined : json['customerIslogged'],
    customerIsanonymous:
      json['customerIsanonymous'] == null ? undefined : json['customerIsanonymous'],
    quizId: json['quizId'] == null ? undefined : json['quizId'],
    quizTitle: json['quizTitle'] == null ? undefined : json['quizTitle'],
    quizDescription: json['quizDescription'] == null ? undefined : json['quizDescription'],
    quizCreatedat: json['quizCreatedat'] == null ? undefined : json['quizCreatedat'],
    quizMaxerrors: json['quizMaxerrors'] == null ? undefined : json['quizMaxerrors'],
    quizIsopen: json['quizIsopen'] == null ? undefined : json['quizIsopen'],
    completedaAt: json['completedaAt'] == null ? undefined : new Date(json['completedaAt']),
    score: json['score']
  }
}

export function ScoreDtoToJSON(value?: ScoreDto | null): any {
  if (value == null) {
    return value
  }
  return {
    customerId: value['customerId'],
    customerUsername: value['customerUsername'],
    customerIslogged: value['customerIslogged'],
    customerIsanonymous: value['customerIsanonymous'],
    quizId: value['quizId'],
    quizTitle: value['quizTitle'],
    quizDescription: value['quizDescription'],
    quizCreatedat: value['quizCreatedat'],
    quizMaxerrors: value['quizMaxerrors'],
    quizIsopen: value['quizIsopen'],
    completedaAt: value['completedaAt'] == null ? undefined : value['completedaAt'].toISOString(),
    score: value['score']
  }
}
