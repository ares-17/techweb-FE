/* tslint:disable */
/* eslint-disable */
/**
 * Tech Web - OpenAPI 3.0
 * Prova
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from './models/runtime'
import type { CustomerDto, Problem, QuizDto } from './models/index'
import {
  CustomerDtoFromJSON,
  CustomerDtoToJSON,
  ProblemFromJSON,
  ProblemToJSON,
  QuizDtoFromJSON,
  QuizDtoToJSON
} from './models/index'

export interface CreateUserRequest {
  customerDto: CustomerDto
}

export interface GetCustomerByIdRequest {
  idCustomer: string
}

export interface GetQuizListByUserRequest {
  idCustomer: string
}

/**
 *
 */
export class UserApi extends runtime.BaseAPI {
  /**
   * Crea un nuovo Utente
   */
  async createUserRaw(
    requestParameters: CreateUserRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CustomerDto>> {
    if (requestParameters['customerDto'] == null) {
      throw new runtime.RequiredError(
        'customerDto',
        'Required parameter "customerDto" was null or undefined when calling createUser().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/user`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: CustomerDtoToJSON(requestParameters['customerDto'])
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, (jsonValue) => CustomerDtoFromJSON(jsonValue))
  }

  /**
   * Crea un nuovo Utente
   */
  async createUser(
    requestParameters: CreateUserRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CustomerDto> {
    const response = await this.createUserRaw(requestParameters, initOverrides)
    return await response.value()
  }

  /**
   * Restituisce un utente
   */
  async getCustomerByIdRaw(
    requestParameters: GetCustomerByIdRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<CustomerDto>> {
    if (requestParameters['idCustomer'] == null) {
      throw new runtime.RequiredError(
        'idCustomer',
        'Required parameter "idCustomer" was null or undefined when calling getCustomerById().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/user/{idCustomer}`.replace(
          `{${'idCustomer'}}`,
          encodeURIComponent(String(requestParameters['idCustomer']))
        ),
        method: 'GET',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, (jsonValue) => CustomerDtoFromJSON(jsonValue))
  }

  /**
   * Restituisce un utente
   */
  async getCustomerById(
    requestParameters: GetCustomerByIdRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<CustomerDto> {
    const response = await this.getCustomerByIdRaw(requestParameters, initOverrides)
    return await response.value()
  }

  /**
   * Restituisce i quiz creati dall\'utente
   */
  async getQuizListByUserRaw(
    requestParameters: GetQuizListByUserRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<Array<QuizDto>>> {
    if (requestParameters['idCustomer'] == null) {
      throw new runtime.RequiredError(
        'idCustomer',
        'Required parameter "idCustomer" was null or undefined when calling getQuizListByUser().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/user/quiz/{idCustomer}`.replace(
          `{${'idCustomer'}}`,
          encodeURIComponent(String(requestParameters['idCustomer']))
        ),
        method: 'GET',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(QuizDtoFromJSON))
  }

  /**
   * Restituisce i quiz creati dall\'utente
   */
  async getQuizListByUser(
    requestParameters: GetQuizListByUserRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<Array<QuizDto>> {
    const response = await this.getQuizListByUserRaw(requestParameters, initOverrides)
    return await response.value()
  }
}
