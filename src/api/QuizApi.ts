/* tslint:disable */
/* eslint-disable */
/**
 * Tech Web - OpenAPI 3.0
 * Prova
 *
 * The version of the OpenAPI document: 1.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from './models/runtime'
import type { Problem, QuizDto } from './models/index'
import { ProblemFromJSON, ProblemToJSON, QuizDtoFromJSON, QuizDtoToJSON } from './models/index'

export interface CreateQuizRequest {
  quizDto: QuizDto
}

export interface GetQuizByIdRequest {
  uidQuiz: string
}

/**
 *
 */
export class QuizApi extends runtime.BaseAPI {
  /**
   * Crea un nuovo quiz
   */
  async createQuizRaw(
    requestParameters: CreateQuizRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<QuizDto>> {
    if (requestParameters['quizDto'] == null) {
      throw new runtime.RequiredError(
        'quizDto',
        'Required parameter "quizDto" was null or undefined when calling createQuiz().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request(
      {
        path: `/quiz`,
        method: 'POST',
        headers: headerParameters,
        query: queryParameters,
        body: QuizDtoToJSON(requestParameters['quizDto'])
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, (jsonValue) => QuizDtoFromJSON(jsonValue))
  }

  /**
   * Crea un nuovo quiz
   */
  async createQuiz(
    requestParameters: CreateQuizRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<QuizDto> {
    const response = await this.createQuizRaw(requestParameters, initOverrides)
    return await response.value()
  }

  /**
   * Restituisce un quiz
   */
  async getQuizByIdRaw(
    requestParameters: GetQuizByIdRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<QuizDto>> {
    if (requestParameters['uidQuiz'] == null) {
      throw new runtime.RequiredError(
        'uidQuiz',
        'Required parameter "uidQuiz" was null or undefined when calling getQuizById().'
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    const response = await this.request(
      {
        path: `/quiz/{uidQuiz}`.replace(
          `{${'uidQuiz'}}`,
          encodeURIComponent(String(requestParameters['uidQuiz']))
        ),
        method: 'GET',
        headers: headerParameters,
        query: queryParameters
      },
      initOverrides
    )

    return new runtime.JSONApiResponse(response, (jsonValue) => QuizDtoFromJSON(jsonValue))
  }

  /**
   * Restituisce un quiz
   */
  async getQuizById(
    requestParameters: GetQuizByIdRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<QuizDto> {
    const response = await this.getQuizByIdRaw(requestParameters, initOverrides)
    return await response.value()
  }
}
